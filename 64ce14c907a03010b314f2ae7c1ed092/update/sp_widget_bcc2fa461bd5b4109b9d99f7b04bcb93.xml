<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[api.controller = function (spUtil, $rootScope, $scope) {
  var c = this;
  /* widget controller */
  // console.log('pruebaaa2:'+JSON.stringify(c.options.widget_parameters));
  if (!c.options.title) {
    c.options.title = "Hello World";
  }
  c.selectItem = function (idx) {
    var id = c.data.notes[idx].sys_id;
    console.log('Note ID: ' + id);
    $rootScope.noteID = id;
    $rootScope.$emit('selectNote', id);
  };

  $rootScope.$on('actualizarNote', function (event, data) {
    console.log("resultado respuesta:" + data.title);
    c.data.title = data.title;
    c.data.note = data.note;
  });
  // spUtil.recordWatch($scope,'x_647573_innovate_note');

  spUtil.recordWatch($scope, "x_647573_innovate_note", "user=6816f79cc0a8016401c5a33be04be441", function (name) {
    console.log("probando recordwatch:" + name.data.operation);
 debugger;
console.log("name:=>"+ name);
    if (name.data.operation == "insert") {
      c.server.refresh();

    }
    if (name.data.operation == "update") {
      //c.server.refresh();
     c.snNoteUpdate(name, name.data.sys_id);
    }

    if (name.data.operation == "delete") {
      c.snNoteDelete(name.data.sys_id);
    }
    //  console.log("name:=>"+ JSUtil.logObject(name)); 
    //console.log("name:=>"+  JSON.stringify(name)); 

  });

// Record removed from data object on the client and passed to server
c.snNoteUpdate = function(name,sysID){
debugger;
  for (var i=0;i<c.data.notes.length;i++){
    if(c.data.notes[i].sys_id == name.data.sys_id){
      if(name.data.record.note){
        debugger;
        c.data.notes[i].note = name.data.record.note.display_value;
      }
      if(name.data.record.title){
        c.data.notes[i].title = name.data.record.title.display_value;
      }
    c.server.update();

    }
  }
};

// Record removed from data object on the server and passed back to client
c.snNoteDelete = function(sysID){
  debugger;
  c.server.refresh();
//  $rootScope.$emit('snDeleteNote', sysID);

 

};

};]]></client_script>
        <controller_as>c</controller_as>
        <css/>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>notes_list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>Notes List</name>
        <option_schema>[{"hint":"Specify a title for the Notes List widget","name":"title","section":"other","default_value":"Notes","label":"Title","type":"string"},{"hint":"Select the maximum number of records to display","name":"maximum_records_to_display","section":"other","default_value":"5","label":"Maximum records to display","type":"choice","choices":[{"label":"2","value":"2"},{"label":"3","value":"3"},{"label":"5","value":"5"},{"label":"7","value":"7"},{"label":"11","value":"11"},{"label":"13","value":"13"},{"label":"17","value":"17"}]}]</option_schema>
        <public>true</public>
        <roles/>
        <script><![CDATA[(function () {
  /* populate the 'data' object */
  /* e.g., data.table = $sp.getValue('table'); */

    /*************Prueba de los widgets options********************* */
 
    //console.log('tamplate=>'+data.template);
   //console.log('pruebaaa:'+JSON.stringify(options.field));
    // console.log('portal' + JSON.stringify(portal));
   

/**************** */
data.notes = [];

  // if (input.action == 'snDeleteNote') {
  //   var delNote = new GlideRecord('x_647573_innovate_note');
  //   // The notes record should already be gone.  Just
  //   // making sure it no longer exists.
  //   if(delNote.get(input.noteID)){
  //     delNote.deleteRecord();
  //   }

  // }else{
   
    var record = new GlideRecord('x_647573_innovate_note');
    record.addQuery('user', gs.getUser().getID());
    record.orderByDesc('sys_created_on');
    record.setLimit(options.maximum_records_to_display);
    record.query();
    while (record.next()) {
      var noteObj = {};
      $sp.getRecordDisplayValues(noteObj, record, 'number,title,sys_id');
      noteObj.note = record.getValue('note').slice(0, 20);
      //push the populated obj into the array
      data.notes.push(noteObj);
      //prueba
    }


  //     if (input.action == 'snDeleteNote') {
  //   var delNote = new GlideRecord('x_647573_innovate_note');
  //   // The notes record should already be gone.  Just
  //   // making sure it no longer exists.
  //   if(delNote.get(input.noteID)){
  //     delNote.deleteRecord();
  //   }
  // }
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-07-13 20:59:16</sys_created_on>
        <sys_id>bcc2fa461bd5b4109b9d99f7b04bcb93</sys_id>
        <sys_mod_count>71</sys_mod_count>
        <sys_name>Notes List</sys_name>
        <sys_package display_value="Innovate" source="x_647573_innovate">64ce14c907a03010b314f2ae7c1ed092</sys_package>
        <sys_policy/>
        <sys_scope display_value="Innovate">64ce14c907a03010b314f2ae7c1ed092</sys_scope>
        <sys_update_name>sp_widget_bcc2fa461bd5b4109b9d99f7b04bcb93</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-07-16 00:00:22</sys_updated_on>
        <template><![CDATA[<div class="panel panel-default">
  <div class="panel-heading clearfix">
  <h3 class="panel-title pull-left">
  {{::c.options.title}}
  </h3>
  </div>
  <div class="list-group">
  <a class="list-group-item" ng-click="c.selectItem($index)" ng-repeat="note in data.notes">
  <h4 class="list-group-item-heading">
  {{note.title}}-{{note.number}}
  </h4>
  <p class="list-group-item-text">
  {{note.note}}
  </p>
  </a>
  </div>
  </div>]]></template>
    </sp_widget>
</record_update>
